(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{253:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"类和对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类和对象"}},[t._v("#")]),t._v(" 类和对象")]),t._v(" "),a("blockquote",[a("p",[t._v("在python中，用变量表示特征，用函数表示技能，"),a("br"),t._v("\n因而具有相同特征和技能的一类事物就是‘类’，"),a("br"),t._v("\n对象是则是这一类事物中具体的一个。"),a("br"),t._v("\n上一节中提到的异常类就是如此。")])]),t._v(" "),a("h2",{attrs:{id:"属性引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性引用"}},[t._v("#")]),t._v(" 属性引用")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义一个人类")]),t._v("\n    role "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'person'")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#人的角色属性都是人")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每一个角色都有自己的昵称;")]),t._v("\n        \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("walk")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#人都可以走路，也就是有一个走路方法")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person is walking..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"实例化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例化"}},[t._v("#")]),t._v(" 实例化")]),t._v(" "),a("p",[t._v("类名()就等于在执行"),a("code",[t._v("Person.__init__")]),t._v("。事实上它还执行了"),a("code",[t._v("Person.__new__")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("egg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'狗蛋'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("执行完"),a("code",[t._v("__init__()")]),t._v("就会返回一个对象（这里的egg）。"),a("br"),t._v("\n这个对象类似一个字典，存着属于这个人本身的一些属性和方法。")]),t._v(" "),a("h3",{attrs:{id:"访问对象属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问对象属性"}},[t._v("#")]),t._v(" 访问对象属性")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("egg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("访问类属性，找不到对象属性的时候会根据访问链向 类属性，描述符，父类属性 查找（顺序远比这个复杂）")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("egg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("设置同名的对象属性不会影响到父类属性")]),t._v(" "),a("h3",{attrs:{id:"调用类方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用类方法"}},[t._v("#")]),t._v(" 调用类方法")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("egg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("walk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("也可以用"),a("strong",[t._v("静态方法的方式")]),t._v("调用类方法，直接实例占用形参"),a("code",[t._v("self")]),t._v("的位置")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("walk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("egg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("创建一个类就会创建一个类的名称空间，"),a("br"),t._v("\n用来存储类中定义的所有名字，这些名字称为类的属性。"),a("br"),t._v("\n静态方法就是直接定义在这个命名空间的函数。"),a("br"),t._v("\n它们的形参不含self和cls，几乎与类和实例无关。")])]),t._v(" "),a("h2",{attrs:{id:"特殊属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊属性"}},[t._v("#")]),t._v(" 特殊属性")]),t._v(" "),a("p",[t._v("我们定义的类的属性到底存到哪里了？有两种方式查看")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("类名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#：查出的是一个名字列表")]),t._v("\n类名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__dict__"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#:查出的是一个字典，key为属性名，value为属性值")]),t._v("\n")])])]),a("p",[t._v("特殊的类属性如下")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("类名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__name__"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 类的名字(字符串)")]),t._v("\n类名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__doc__"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 类的文档字符串")]),t._v("\n类名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__base__"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 类的第一个父类(在讲继承时会讲)")]),t._v("\n类名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__bases__"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 类所有父类构成的元组(在讲继承时会讲)")]),t._v("\n类名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__dict__"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 类的字典属性")]),t._v("\n类名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__module__"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 类定义所在的模块")]),t._v("\n\n实例化对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__class__"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 实例对应的类(仅新式类中)")]),t._v("\n")])])]),a("h2",{attrs:{id:"组合用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合用法"}},[t._v("#")]),t._v(" 组合用法")]),t._v(" "),a("p",[t._v("组合指的是，在一个类中以另外一个类的对象作为数据属性，称为类的组合")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" math "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" pi\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Circle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n    定义了一个圆形类；\n    提供计算面积(area)和周长(perimeter)的方法\n    '''")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("radius"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("radius "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" radius\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("area")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" pi "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("radius "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("radius\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("perimeter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pi "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("radius\n\ncircle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Circle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#实例化一个圆")]),t._v("\narea1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" circle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("area"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#计算圆面积")]),t._v("\nper1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" circle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("perimeter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#计算圆周长")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("area1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("per1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#打印圆面积和周长")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Ring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n    定义了一个圆环类\n    提供圆环的面积和周长的方法\n    '''")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("radius_outside"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("radius_inside"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("outsid_circle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Circle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("radius_outside"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inside_circle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Circle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("radius_inside"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("area")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("outsid_circle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("area"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inside_circle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("area"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("perimeter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("  self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("outsid_circle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("perimeter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inside_circle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("perimeter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nring "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Ring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#实例化一个环形")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("perimeter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#计算环形的周长")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("area"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#计算环形的面积")]),t._v("\n")])])]),a("h2",{attrs:{id:"观察者模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#观察者模式"}},[t._v("#")]),t._v(" 观察者模式")]),t._v(" "),a("blockquote",[a("p",[t._v("观察者模式（Observer）")]),t._v(" "),a("p",[t._v("指多个对象间存在一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。这种模式有时又称作发布-订阅模式、模型-视图模式，它是对象行为型模式。")])]),t._v(" "),a("h2",{attrs:{id:"描述符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述符"}},[t._v("#")]),t._v(" 描述符")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://docs.python.org/zh-cn/3/howto/descriptor.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("描述符(descriptor)"),a("OutboundLink")],1),t._v(" 是一种类")]),t._v(" "),a("p",[t._v("我们把实现了"),a("code",[t._v("__get__()")]),t._v("、"),a("code",[t._v("__set__()")]),t._v("和"),a("code",[t._v("__delete__()")]),t._v("中的其中任意一种方法的类称之为描述符")]),t._v(" "),a("h3",{attrs:{id:"创建一个描述符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建一个描述符"}},[t._v("#")]),t._v(" 创建一个描述符")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stu_descriptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__get__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" objtype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"获取了val的值"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__set__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"修改了val的值"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__delete__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"删除了val属性"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val\n")])])]),a("h3",{attrs:{id:"使用描述符来代理属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用描述符来代理属性"}},[t._v("#")]),t._v(" 使用描述符来代理属性")]),t._v(" "),a("p",[t._v("描述符是一种具有“捆绑行为”的对象属性，也是一种Observer。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Stu_descriptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nstu "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nstu "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age\nstu "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#自动回收内存")]),t._v("\n")])])]),a("h4",{attrs:{id:"触发描述符的魔术方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#触发描述符的魔术方法"}},[t._v("#")]),t._v(" 触发描述符的魔术方法")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n修改了val的值\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age\n获取了val的值\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age\n删除了val属性\n")])])]),a("ul",[a("li",[a("h4",{attrs:{id:"数据描述符-data-descriptor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据描述符-data-descriptor"}},[t._v("#")]),t._v(" 数据描述符（data descriptor）")])]),t._v(" "),a("li",[a("h4",{attrs:{id:"非数据描述符-non-data-descriptors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非数据描述符-non-data-descriptors"}},[t._v("#")]),t._v(" 非数据描述符（non-data descriptors）")])])]),t._v(" "),a("p",[t._v("数据描述符：定义了"),a("code",[t._v("__set__")]),t._v(" 和"),a("code",[t._v("__get__")]),t._v(" 方法的对象(property是数据描述符)")]),t._v(" "),a("p",[t._v("非数据描述符：只定义了"),a("code",[t._v("__get__")]),t._v(" 方法的对象(staticmethod，classmethod是非数据描述符)")]),t._v(" "),a("h4",{attrs:{id:"与魔术方法-del-方法的不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与魔术方法-del-方法的不同"}},[t._v("#")]),t._v(" 与魔术方法"),a("code",[t._v("__del__")]),t._v("方法的不同")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__del__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"对象内存已被回收"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstu1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstu2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" stu1\n对象内存已被回收\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" stu2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n对象内存已被回收\n")])])]),a("p",[a("code",[t._v("__del__")]),t._v("方法是对象内存被回收（包括自动回收）时触发，此方法一般无须定义。"),a("br"),t._v("\n因为Python是一门高级语言，程序员在使用时无需关心内存的分配和释放，"),a("br"),t._v("\n因为此工作都是交给Python解释器来执行，"),a("br"),t._v("\n所以，析构函数的调用是由解释器在进行垃圾回收时自动触发执行的"),a("br"),t._v("\n更多的魔术方法将在后面介绍")])])}),[],!1,null,null,null);s.default=e.exports}}]);