(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{132:function(s,t,a){"use strict";a.r(t);var e=a(0),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"pyinstaller模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pyinstaller模块"}},[s._v("#")]),s._v(" PyInstaller模块")]),s._v(" "),a("p",[s._v("绝大多数人电脑里都没有Python编译器，所以打包成exe，让用户（windows）双击就可以打开"),a("br"),s._v("\nPyInstaller模块是用来打包的办法之一")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("关于本模块")]),s._v(" "),a("p",[s._v("本笔记只记录基础，详细的API用法请左转其官方文档。")])]),s._v(" "),a("h2",{attrs:{id:"使用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[s._v("#")]),s._v(" 使用方法")]),s._v(" "),a("p",[s._v("打开cmd窗口，把路径切换到入口文件所在路径，输入以下内容（最后的是文件名，而且一定要是纯英文）：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("pyinstaller -F myfile.py\n")])])]),a("h3",{attrs:{id:"参数的含义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数的含义"}},[s._v("#")]),s._v(" 参数的含义")]),s._v(" "),a("ul",[a("li",[s._v("-F 表示生成单个可执行文件")]),s._v(" "),a("li",[s._v("-w 表示去掉控制台窗口，这在GUI界面时非常有用。不过如果是命令行程序的话那就把这个选项删除吧！")]),s._v(" "),a("li",[s._v("-p 表示你自己自定义需要加载的类路径，一般情况下用不到")]),s._v(" "),a("li",[s._v("-i 表示可执行文件的图标")])]),s._v(" "),a("h2",{attrs:{id:"若使用shell命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#若使用shell命令"}},[s._v("#")]),s._v(" 若使用shell命令")]),s._v(" "),a("p",[s._v("GUI项目中若需执行shell脚本，os模块的方法则不推荐使用，"),a("br"),s._v("\n如"),a("s",[s._v("os.system")]),s._v("、 "),a("s",[s._v("os.popen")]),s._v(" 等方法。否则影响GUI界面的使用体验（黑窗口一闪而过）")]),s._v(" "),a("h3",{attrs:{id:"使用内置模块subprocess"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用内置模块subprocess"}},[s._v("#")]),s._v(" 使用内置模块subprocess")]),s._v(" "),a("p",[s._v("通过subprocess.Popen创建子进程类就不会造成cmd窗口一闪而过。"),a("br"),s._v("\n其实例化对象可以用"),a("code",[s._v(".wait()")]),s._v("方法来等返回结果，否则不会阻塞。"),a("br"),s._v("\n设定一小时后关机")]),s._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" subprocess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Popen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shutdown -s -t 3600"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" shell"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("wait"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#阻塞进程等待shell命令执行完毕")]),s._v("\n")])])]),a("h2",{attrs:{id:"若使用第三方库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#若使用第三方库"}},[s._v("#")]),s._v(" 若使用第三方库")]),s._v(" "),a("p",[s._v("在打包之前务必找到第三方库的包，把包复制到到跟myfile.py同目录下，然后再使用以上2种方式打包，否则会打包失败或者即使打包成功，程序也会闪退。"),a("br"),s._v("\n找到第三方库的包，如使用了requests，可以使用查找的方式，找到这个包在哪里，然后把它复制到入口文件同目录下"),a("br"),s._v("\n打包命令加上"),a("code",[s._v("--hidden-import model_name")])]),s._v(" "),a("h2",{attrs:{id:"解决打包后体积太大"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决打包后体积太大"}},[s._v("#")]),s._v(" 解决打包后体积太大")]),s._v(" "),a("p",[s._v("使用虚拟环境 如 "),a("code",[s._v("pipenv")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#建立虚拟环境")]),s._v("\npipenv "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#进入虚拟环境")]),s._v("\npipenv shell\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#安装依赖的模块")]),s._v("\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -r requirements.txt\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#打包的模块也要安装")]),s._v("\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" pyinstaller\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#开始打包")]),s._v("\npyinstaller -Fw xx.py\n")])])]),a("p",[a("strong",[s._v("关于requirements.txt")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("可以直接将pip list中的内容生成")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("pip freeze "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" requirements.txt\n")])])])]),s._v(" "),a("li",[a("p",[s._v("更推荐直接手写，格式如下")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("moviepy")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.2")]),s._v(".3.2\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("requests")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.18")]),s._v(".4\n")])])])])]),s._v(" "),a("h2",{attrs:{id:"其他注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他注意事项"}},[s._v("#")]),s._v(" 其他注意事项")]),s._v(" "),a("p",[a("s",[s._v("基于当前系统配置PyInstaller，如果更换了Python版本，需要重新下载相应版本的PyInstaller并重新执行Configure.py")]),s._v("（pip安装的PyInstaller不必如此）"),a("br"),s._v("\n注意关注运行过程中的警告和错误，最好没有警告和错误，如果出现找不到某dll，可以下载后放到C:\\Windows\\system32下，一般都能解决。")])])}),[],!1,null,null,null);t.default=r.exports}}]);