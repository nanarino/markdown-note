(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{193:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"模块和包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块和包","aria-hidden":"true"}},[t._v("#")]),t._v(" 模块和包")]),t._v(" "),s("h2",{attrs:{id:"模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块","aria-hidden":"true"}},[t._v("#")]),t._v(" 模块")]),t._v(" "),s("p",[t._v("import加载的模块分为四个通用类别：")]),t._v(" "),s("p",[t._v("1 使用python编写的代码（.py文件）")]),t._v(" "),s("p",[t._v("2 已被编译为共享库或DLL的C或C++扩展")]),t._v(" "),s("p",[t._v("3 包好一组模块的包")]),t._v(" "),s("p",[t._v("4 使用C编写并链接到python解释器的内置模块")]),t._v(" "),s("p",[t._v("我们可以从sys.modules中找到当前已经加载的模块，sys.modules是一个字典，内部包含模块名与模块对象的映射，该字典决定了导入模块时是否需要重新导入。")]),t._v(" "),s("h5",{attrs:{id:"示例文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例文件")]),t._v(" "),s("p",[t._v("自定义模块my_module.py，文件名my_module.py,模块名my_module")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#my_module.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'from the my_module.py'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmoney"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my_module->read1->money'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("money"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my_module->read2 calling read1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    read1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("change")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global")]),t._v(" money\n    money"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),s("p",[t._v("每个模块都是一个独立的名称空间，定义在这个模块中的函数，把这个模块的名称空间当做全局名称空间，这样我们在编写自己的模块时，就不用担心我们定义在自己模块中全局变量会在被导入时，与使用者的全局变量冲突")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#测试：执行my_module.change()操作的全局变量money仍然是my_module中的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#demo.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" my_module\nmoney"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nmy_module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("change"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("money"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n执行结果：\nfrom the my_module.py\n1\n'''")]),t._v("\n")])])]),s("h5",{attrs:{id:"在一行导入多个模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在一行导入多个模块","aria-hidden":"true"}},[t._v("#")]),t._v(" 在一行导入多个模块")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("re\n")])])]),s("h5",{attrs:{id:"别名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#别名","aria-hidden":"true"}},[t._v("#")]),t._v(" 别名")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" my_module "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" sm\n")])])]),s("h5",{attrs:{id:"from-import"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#from-import","aria-hidden":"true"}},[t._v("#")]),t._v(" from ... import...")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" my_module "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" read1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("read2\n")])])]),s("p",[t._v("如果当前有重名read1或者read2，那么会有覆盖效果。")]),t._v(" "),s("p",[t._v("需要特别强调的一点是：python中的变量赋值不是一种存储操作，而只是一种绑定关系，如下：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" my_module "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" money"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("read1\nmoney"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将当前位置的名字money绑定到了100")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("money"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#打印当前的名字")]),t._v("\nread1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#读取my_module.py中的名字money,仍然为1000")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\nfrom the my_module.py\n100\nmy_module->read1->money 1000\n'''")]),t._v("\n")])])]),s("h5",{attrs:{id:"导入多行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#导入多行","aria-hidden":"true"}},[t._v("#")]),t._v(" 导入多行")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" my_module "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("read1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                   read2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                   money"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h5",{attrs:{id:"别名-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#别名-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 别名")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" my_module "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" read1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" read\n")])])]),s("h5",{attrs:{id:"全部导入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全部导入","aria-hidden":"true"}},[t._v("#")]),t._v(" 全部导入")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" my_module "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将模块my_module中所有的名字都导入到当前名称空间")]),t._v("\n")])])]),s("p",[t._v("在my_module.py中新增一行")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("__all__"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'money'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'read1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这样在另外一个文件中用from my_module import *就这能导入列表中规定的两个名字")]),t._v("\n")])])]),s("p",[t._v("*"),s("em",[t._v("如果my_module.py中的名字前加_,即_money，则from my_module import *,则_money不能被导入")])]),t._v(" "),s("h4",{attrs:{id:"模块的加载与修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块的加载与修改","aria-hidden":"true"}},[t._v("#")]),t._v(" 模块的加载与修改")]),t._v(" "),s("p",[t._v("考虑到性能的原因，每个模块只被导入一次,放入字典sys.modules中，如果你改变了模块的内容，你必须重启程序，python不支持重新加载或卸载之前导入的模块")]),t._v(" "),s("p",[t._v("如果只是你想交互测试的一个模块，使用 importlib.reload(), e.g. import importlib; importlib.reload(modulename)，这只能用于测试环境。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#aa.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'func1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("importlib\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" aa\n \ntime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# importlib.reload(aa)")]),t._v("\naa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("func1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("在20秒的等待时间里，修改aa.py中func1的内容，等待test.py的结果。")]),t._v(" "),s("p",[t._v("打开importlib注释，重新测试")]),t._v(" "),s("h4",{attrs:{id:"把模块当做脚本执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#把模块当做脚本执行","aria-hidden":"true"}},[t._v("#")]),t._v(" 把模块当做脚本执行")]),t._v(" "),s("p",[t._v("我们可以通过模块的全局变量"),s("code",[t._v("__name__")]),t._v("来查看模块名：")]),t._v(" "),s("p",[t._v("当做脚本运行：")]),t._v(" "),s("p",[s("code",[t._v("__name__")]),t._v("等于"),s("code",[t._v("'__main__'")])]),t._v(" "),s("p",[t._v("当做模块导入：")]),t._v(" "),s("p",[s("code",[t._v("__name__")]),t._v("= 模块名")]),t._v(" "),s("p",[t._v("作用：用来控制.py文件在不同的应用场景下执行不同的逻辑")]),t._v(" "),s("p",[s("code",[t._v("if __name__ == '__main__':")])]),t._v(" "),s("h4",{attrs:{id:"模块搜索路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块搜索路径","aria-hidden":"true"}},[t._v("#")]),t._v(" 模块搜索路径")]),t._v(" "),s("p",[t._v("python解释器在启动时会自动加载一些模块，可以使用sys.modules查看")]),t._v(" "),s("p",[t._v("模块的查找顺序是：内存中已经加载的模块->内置模块->sys.path路径中包含的模块")]),t._v(" "),s("p",[t._v("在初始化后，python程序可以修改sys.path,路径放到前面的优先于标准库被加载")]),t._v(" "),s("h4",{attrs:{id:"编译python文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译python文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 编译python文件")]),t._v(" "),s("p",[t._v("为了提高加载模块的速度，强调强调强调：提高的是加载速度而绝非运行速度。python解释器会在"),s("code",[t._v("__pycache__")]),t._v("目录中下缓存每个模块编译后的版本，格式为：module.version.pyc。通常会包含python的版本号。例如，在CPython3.3版本下，my_module.py模块会被缓存成"),s("code",[t._v("__pycache__/my_module.cpython-33.pyc")]),t._v("。这种命名规范保证了编译后的结果多版本共存。")]),t._v(" "),s("h4",{attrs:{id:"dir-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dir-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" dir()函数")]),t._v(" "),s("p",[t._v("内建函数dir是用来查找模块中定义的名字，返回一个有序字符串列表")]),t._v(" "),s("h2",{attrs:{id:"包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包","aria-hidden":"true"}},[t._v("#")]),t._v(" 包")]),t._v(" "),s("blockquote",[s("p",[t._v("包是一种通过使用‘.模块名’来组织python模块名称空间的方式。")]),t._v(" "),s("p",[t._v("１. 无论是import形式还是from...import形式，凡是在导入语句中（而不是在使用时）遇到带点的，都要第一时间提高警觉：这是关于包才有的导入语法")]),t._v(" "),s("p",[t._v("​    2.包是目录级的（文件夹级），文件夹是用来组成py文件（包的本质就是一个包含"),s("code",[t._v("__init__.py")]),t._v("文件的目录）")]),t._v(" "),s("p",[t._v("​    3.import导入文件时，产生名称空间中的名字来源于文件，import 包，产生的名称空间的名字同样来源于文件，即包下的"),s("code",[t._v("__init__.py")]),t._v("，导入包本质就是在导入该文件")]),t._v(" "),s("p",[s("strong",[t._v("强调：")])]),t._v(" "),s("p",[t._v("1. 在python3中，即使包下没有"),s("code",[t._v("__init__.py")]),t._v("文件，import 包仍然不会报错，而在python2中，包下一定要有该文件，否则import 包报错")]),t._v(" "),s("p",[t._v("2. 创建包的目的不是为了运行，而是被导入使用，记住，包只是模块的一种形式而已，包即模块")])]),t._v(" "),s("h2",{attrs:{id:"绝对导入和相对导入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绝对导入和相对导入","aria-hidden":"true"}},[t._v("#")]),t._v(" 绝对导入和相对导入")]),t._v(" "),s("p",[t._v("我们的最顶级包glance是写给别人用的，然后在glance包内部也会有彼此之间互相导入的需求，这时候就有绝对导入和相对导入两种方式：")]),t._v(" "),s("p",[t._v("绝对导入：以glance作为起始")]),t._v(" "),s("p",[t._v("相对导入：用.或者..的方式为起始（只能在一个包中使用，不能用于不同目录内）")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#绝对导入")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" glance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cmd "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" manage\nmanage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#相对导入")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cmd "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" manage\nmanage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("测试结果：注意一定要在于glance同级的文件中测试")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" glance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("api "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" versions \n")])])]),s("p",[t._v("注意：在使用pycharm时，有的情况会为你多做一些事情，这是软件相关的东西，会影响你对模块导入的理解，因而在测试时，一定要回到命令行去执行")]),t._v(" "),s("p",[t._v("单独导入包名称时不会导入包中所有包含的所有子模块  需要:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#glance/__init__.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" cmd\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#glance/cmd/__init__.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" manage\n")])])]),s("p",[t._v("执行:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" glance\nglance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("manage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("直接调用所有:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("glance"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("                   \n\n├── __init__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("api "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cmd "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("db "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("    \n├── api                  \n\n│   ├── __init__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py   __all__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'policy'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'versions'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n\n│   ├── policy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py\n\n│   └── versions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py\n\n├── cmd               __all__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'manage'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    \n\n│   ├── __init__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py\n\n│   └── manage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py    \n\n└── db                __all__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'models'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("              \n\n    ├── __init__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py\n\n    └── models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" glance\npolicy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}],!1,null,null,null);a.default=e.exports}}]);