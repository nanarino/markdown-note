(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{236:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"字典和集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字典和集合","aria-hidden":"true"}},[t._v("#")]),t._v(" 字典和集合")]),t._v(" "),s("blockquote",[s("p",[t._v("内置函数"),s("code",[t._v("id(变量名)")]),t._v("返回内存地址")]),t._v(" "),s("p",[t._v("修改元素id不变("),s("code",[t._v("unhashable")]),t._v(")的数据类型: 列表 字典 集合")]),t._v(" "),s("ul",[s("li",[t._v("直接访问: 数字")]),t._v(" "),s("li",[t._v("顺序访问:字符串 列表 元组")]),t._v(" "),s("li",[t._v("映射访问: 字典")])])]),t._v(" "),s("h2",{attrs:{id:"字典"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字典","aria-hidden":"true"}},[t._v("#")]),t._v(" 字典")]),t._v(" "),s("blockquote",[s("h3",{attrs:{id:"dict"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dict","aria-hidden":"true"}},[t._v("#")]),t._v(" dict")]),t._v(" "),s("p",[t._v("可迭代 可变 无序\n一系列键值对key-value用冒号分割,格式如下,")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("key必须是不可变类型的数据\nvalue可以是任意数据类型")])]),t._v(" "),s("h4",{attrs:{id:"索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引","aria-hidden":"true"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h4",{attrs:{id:"方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),s("p",[s("code",[t._v("len(dict)")]),t._v("返回键的数目")]),t._v(" "),s("p",[s("code",[t._v("dict()")]),t._v(" 转化为字典类型")]),t._v(" "),s("p",[s("code",[t._v("dict.fromkeys(可迭代对象,value)")]),t._v("静态方法 生成字典,")]),t._v(" "),s("p",[t._v("内置函数zip也可以生成字典")]),t._v(" "),s("p",[s("code",[t._v(".copy()")]),t._v("浅拷贝")]),t._v(" "),s("h5",{attrs:{id:"增删改查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#增删改查","aria-hidden":"true"}},[t._v("#")]),t._v(" 增删改查")]),t._v(" "),s("p",[s("code",[t._v(".setdefault(key,value)")]),t._v("已存在则返回已存在的value,不存在则设置")]),t._v(" "),s("p",[s("code",[t._v(".update(key=value)")]),t._v(" "),s("code",[t._v(".update(dict)")]),t._v("设置,已存在则覆盖   #支持dic 不需要**dic")]),t._v(" "),s("p",[s("code",[t._v(".pop(key,None)")]),t._v("返回value,不存在则返回第二个参数 默认为None")]),t._v(" "),s("p",[s("code",[t._v(".popitem()")]),t._v("随机删一个并返回键值对")]),t._v(" "),s("p",[s("code",[t._v(".clear()")]),t._v("清空")]),t._v(" "),s("p",[s("code",[t._v("del 索引")]),t._v(" del 字典会引发异常")]),t._v(" "),s("p",[s("code",[t._v(".get(key,None)")]),t._v("查找 不存在则返回第二个参数 默认为None")]),t._v(" "),s("p",[s("code",[t._v(".items()")]),t._v("返回键值对组成的列表")]),t._v(" "),s("p",[s("code",[t._v(".keys()")]),t._v("返回键组成的列表")]),t._v(" "),s("p",[s("code",[t._v(".values()")]),t._v("返回值组成的列表")]),t._v(" "),s("h2",{attrs:{id:"集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合","aria-hidden":"true"}},[t._v("#")]),t._v(" 集合")]),t._v(" "),s("blockquote",[s("h3",{attrs:{id:"set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set","aria-hidden":"true"}},[t._v("#")]),t._v(" set")]),t._v(" "),s("p",[t._v("可迭代  可变 无序  ,  元素不重复")]),t._v(" "),s("p",[t._v("生成方式:")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("{1,2,3,4,5}")])]),t._v(" "),s("li",[s("code",[t._v("set(可迭代对象)")])])])]),t._v(" "),s("h4",{attrs:{id:"增删方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#增删方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 增删方法")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p_obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \ns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("claer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#清空")]),t._v("\ns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#随机删除一个")]),t._v("\ns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remove"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除 没有=>报错")]),t._v("\ns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("discard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除 没有不报错")]),t._v("\n")])])]),s("h5",{attrs:{id:"浅拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝","aria-hidden":"true"}},[t._v("#")]),t._v(" 浅拷贝")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("     s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("copy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果是list直接使用切片就可以浅拷贝arr2=arr[:]")]),t._v("\n")])])]),s("h5",{attrs:{id:"集合之间运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合之间运算","aria-hidden":"true"}},[t._v("#")]),t._v(" 集合之间运算")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}}),t._v(" "),s("th",{staticStyle:{"text-align":"left"}}),t._v(" "),s("th",{staticStyle:{"text-align":"left"}})])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("交集")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("s1&s2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("s1.intersection(s2)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("并集")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("s1|s2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("s1.union(s2)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("差集")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("s1-s2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("s1.difference(s2)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("交叉补集")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("s1.symmetric_difference(s2)")])])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("issubset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#s1是否是s2子集")]),t._v("\ns1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("issuperset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#s1是否是s2超集")]),t._v("\ns1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("intersection_update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \ns1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("difference_update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("symmetric_difference_update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("code",[t._v("set()")]),t._v("和 "),s("code",[t._v("frozenset()")]),t._v("分别用来生成可变和不可变的集合")])])}],!1,null,null,null);a.default=n.exports}}]);