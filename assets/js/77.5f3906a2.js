(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{292:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"字典和集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字典和集合"}},[t._v("#")]),t._v(" 字典和集合")]),t._v(" "),a("blockquote",[a("p",[t._v("几种数据类型在内存中的访问方式")]),t._v(" "),a("ul",[a("li",[t._v("直接访问：数字")]),t._v(" "),a("li",[t._v("顺序访问：字符串 列表 元组")]),t._v(" "),a("li",[t._v("映射访问：字典")])])]),t._v(" "),a("h2",{attrs:{id:"字典"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字典"}},[t._v("#")]),t._v(" 字典")]),t._v(" "),a("blockquote",[a("h3",{attrs:{id:"dict"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dict"}},[t._v("#")]),t._v(" dict")]),t._v(" "),a("p",[t._v("可迭代类型 可变类型 无序类型\n一系列键值对key-value用冒号分割，格式如下：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key1'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key2'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value2'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("key必须是"),a("strong",[t._v("不可变类型")]),t._v("的数据（否则报错unhashable）"),a("br"),t._v("\nvalue可以是任意数据类型"),a("br"),t._v("\n如果key使用布尔值会被转换为1和0")])]),t._v(" "),a("p",[t._v("在python3.6以上版本中，字典默认按插入的顺序排列了键值对。"),a("br"),t._v("\n在python3.8以上版本中，字典可以使用 "),a("code",[t._v("reversed()")]),t._v("按插入顺序反向迭代")]),t._v(" "),a("h3",{attrs:{id:"索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),a("h4",{attrs:{id:"in成员运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#in成员运算符"}},[t._v("#")]),t._v(" in成员运算符")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key1'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#判断键是否存在 返回布尔值")]),t._v("\n")])])]),a("h4",{attrs:{id:"getitem操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getitem操作"}},[t._v("#")]),t._v(" getitem操作")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value1'")]),t._v("\n")])])]),a("h4",{attrs:{id:"setitem操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setitem操作"}},[t._v("#")]),t._v(" setitem操作")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'debu'")]),t._v("\n")])])]),a("h3",{attrs:{id:"有关的内置函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有关的内置函数"}},[t._v("#")]),t._v(" 有关的内置函数")]),t._v(" "),a("p",[a("code",[t._v("len(dict)")]),t._v("返回键的数目")]),t._v(" "),a("p",[a("code",[t._v("zip()")]),t._v("以拉链法"),a("strong",[t._v("惰性")]),t._v("生成键值对："),a("code",[t._v("('a','b','c'),(1,2,3)")]),t._v(" ->"),a("code",[t._v("[('a',1),('b',2)('c',3)]")])]),t._v(" "),a("p",[a("code",[t._v("dict()")]),t._v(" 以键值对生成字典："),a("code",[t._v("[('a',1),('b',2),('c',3)]")]),t._v(" -> "),a("code",[t._v("{'a':1,'b':2,'c':3}")])]),t._v(" "),a("h3",{attrs:{id:"常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),a("p",[a("code",[t._v("dict.fromkeys(可迭代对象,value)")]),t._v("静态方法生成字典，所有键的值都为value")]),t._v(" "),a("p",[a("code",[t._v(".copy()")]),t._v(" 浅拷贝")]),t._v(" "),a("h4",{attrs:{id:"增删改查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#增删改查"}},[t._v("#")]),t._v(" 增删改查")]),t._v(" "),a("p",[a("code",[t._v(".setdefault(key, value)")]),t._v("已存在则返回已存在的value，不存在则设置。")]),t._v(" "),a("p",[a("code",[t._v(".update(key=value)")]),t._v(" "),a("code",[t._v(".update(dict)")]),t._v("设置或覆盖，这里可对比之后章节函数的剩余参数。")]),t._v(" "),a("p",[a("code",[t._v(".pop(key, None)")]),t._v("删除并返回其value，不存在则返回第二个参数，第二个参数默认为None。")]),t._v(" "),a("p",[a("code",[t._v(".popitem()")]),t._v("随机删一个并返回其键值对。")]),t._v(" "),a("p",[a("code",[t._v(".clear()")]),t._v("清空。")]),t._v(" "),a("p",[a("code",[t._v("del d[key1]")]),t._v("  删除一组键值对。")]),t._v(" "),a("p",[a("code",[t._v(".get(key, None)")]),t._v("查找 不存在则返回第二个参数 默认为None。")]),t._v(" "),a("p",[a("code",[t._v(".items()")]),t._v("返回键值对组成的列表。功能与"),a("code",[t._v("dict()")]),t._v("相反。")]),t._v(" "),a("p",[a("code",[t._v(".keys()")]),t._v("返回键组成的列表。")]),t._v(" "),a("p",[a("code",[t._v(".values()")]),t._v("返回值组成的列表。")]),t._v(" "),a("h2",{attrs:{id:"集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合"}},[t._v("#")]),t._v(" 集合")]),t._v(" "),a("blockquote",[a("h3",{attrs:{id:"set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" set")]),t._v(" "),a("p",[t._v("可迭代类型  可变类型 无序类型  ,  元素不重复")]),t._v(" "),a("p",[t._v("生成方式:")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("{1,2,3,4,5}")])]),t._v(" "),a("li",[a("code",[t._v("set(可迭代对象)")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("规范的初始化")]),t._v(" "),a("p",[t._v("创建一个空字典或空集合的时候使用"),a("code",[t._v("dict()")]),t._v("和"),a("code",[t._v("set()")]),a("br"),t._v("\n而不是使用"),a("code",[t._v("{}")])])]),t._v(" "),a("h3",{attrs:{id:"增删方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#增删方法"}},[t._v("#")]),t._v(" 增删方法")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p_obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("claer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#清空")]),t._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#随机删除一个并返回其值")]),t._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remove"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除 没有=>报错")]),t._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("discard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除 没有不报错")]),t._v("\n")])])]),a("h3",{attrs:{id:"浅拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝"}},[t._v("#")]),t._v(" 浅拷贝")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("copy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果是list直接使用切片就可以浅拷贝arr2=arr[:]")]),t._v("\n")])])]),a("h3",{attrs:{id:"集合之间运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合之间运算"}},[t._v("#")]),t._v(" 集合之间运算")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符表示")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("对象方法")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("交集")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("s1&s2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("s1.intersection(s2)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("并集")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("s1|s2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("s1.union(s2)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("差集")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("s1-s2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("s1.difference(s2)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("交叉补集")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("s1.symmetric_difference(s2)")])])])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("issubset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#s1是否是s2子集")]),t._v("\ns1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("issuperset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#s1是否是s2超集")]),t._v("\ns1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("intersection_update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \ns1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("difference_update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("symmetric_difference_update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("内置函数 "),a("code",[t._v("set()")]),t._v("和 "),a("code",[t._v("frozenset()")]),t._v("分别用来生成可变和不可变的集合")])])}),[],!1,null,null,null);s.default=n.exports}}]);