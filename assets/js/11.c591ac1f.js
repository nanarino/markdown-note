(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{207:function(t,s,n){"use strict";n.r(s);var a=n(0),r=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"初识python"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初识python","aria-hidden":"true"}},[t._v("#")]),t._v(" 初识python")]),t._v(" "),n("h4",{attrs:{id:"_1，计算机基础。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1，计算机基础。","aria-hidden":"true"}},[t._v("#")]),t._v(" 1，计算机基础。")]),t._v(" "),n("p",[t._v("cpu:用于计算。相当于一个博士。\n显卡:用于计算。相当于数千名初中生。\n内存:储存数据  最早128MB内存条 发展到8G,16G,32G, 成本高，断电即消失。\n硬盘:1T，固态硬盘，机械硬盘，储存数据，长久保持数据, 。\n操作系统:纯命令行发展为图形界面 ,\n应用程序::操作系统也是应用程序。\n:安卓App ->  java虚拟机  -> 安卓系统 之间的关系")]),t._v(" "),n("h4",{attrs:{id:"_2，python历史。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2，python历史。","aria-hidden":"true"}},[t._v("#")]),t._v(" 2，python历史。")]),t._v(" "),n("p",[t._v("宏观上：python2 与 python3 区别：\npython2 源码不标准，混乱，重复代码太多，\npython3 统一 标准，去除重复代码。")]),t._v(" "),n("h4",{attrs:{id:"_3，python的环境。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3，python的环境。","aria-hidden":"true"}},[t._v("#")]),t._v(" 3，python的环境。")]),t._v(" "),n("p",[t._v("编译型：一次性将所有程序编译成二进制文件。\n缺点：开发效率低，不能跨平台。\n优点：运行速度快。\n：C，C++等等。")]),t._v(" "),n("p",[t._v("解释型：当程序执行时，一行一行的解释。\n优点：开发效率高，可以跨平台。\n缺点：运行速度慢。\n:python ,php,等等。")]),t._v(" "),n("h4",{attrs:{id:"_4，python的发展。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4，python的发展。","aria-hidden":"true"}},[t._v("#")]),t._v(" 4，python的发展。")]),t._v(" "),n("h4",{attrs:{id:"_5，python种类。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5，python种类。","aria-hidden":"true"}},[t._v("#")]),t._v(" 5，python种类。")]),t._v(" "),n("p",[t._v("​    运行第一个py文件：\npython3x :python 文件路径 回车\npython2x :python2 文件路径 回车\npython2 python3 区别：python2默认编码方式是ascii码\n解决方式：在文件的首行："),n("code",[t._v("#-*- encoding:utf-8 -*-")]),t._v("\npython3 默认编码方式utf-8")]),t._v(" "),n("h4",{attrs:{id:"_6，变量。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6，变量。","aria-hidden":"true"}},[t._v("#")]),t._v(" 6，变量。")]),t._v(" "),n("p",[t._v("​    变量：就是将一些运算的中间结果暂存到内存中，以便后续代码调用。\n1,必须由数字，字母，下划线任意组合，且不能数字开头。\n2,不能是python中的关键字:")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'and'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'as'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'assert'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'break'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'class'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'continue'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'def'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'del'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'elif'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'else'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'except'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'exec'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'finally'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'for'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'from'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'global'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'if'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'import'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'in'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'is'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lambda'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'not'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'or'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pass'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'print'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'raise'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'return'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'try'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'while'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'with'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yield'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("p",[t._v("​    3,变量具有可描述性。\n4,不能是中文。")]),t._v(" "),n("h4",{attrs:{id:"_7，常量。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7，常量。","aria-hidden":"true"}},[t._v("#")]),t._v(" 7，常量。")]),t._v(" "),n("p",[t._v("​    一直不变的量。     圆周率π    自然对数底数e\nBIR_OF_CHINA = 1949")]),t._v(" "),n("h4",{attrs:{id:"_8，注释。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8，注释。","aria-hidden":"true"}},[t._v("#")]),t._v(" 8，注释。")]),t._v(" "),n("p",[t._v("方便自己方便他人理解代码。\n单行注释：#\n多行注释：'''被注释内容'''")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n\n被注释内容:代码千万行,注释第一行,注释不规范,亲人两行泪\n\n"""')]),t._v("\n")])])]),n("h4",{attrs:{id:"_9，用户交互。input"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9，用户交互。input","aria-hidden":"true"}},[t._v("#")]),t._v(" 9，用户交互。input")]),t._v(" "),n("p",[t._v("1，等待输入，\n2，将你输入的内容赋值给了前面变量。\n3，input出来的数据类型全部是str")]),t._v(" "),n("h4",{attrs:{id:"_10，基础数据类型初始。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10，基础数据类型初始。","aria-hidden":"true"}},[t._v("#")]),t._v(" 10，基础数据类型初始。")]),t._v(" "),n("p",[t._v("数字：int 12,3,45\n​    一些算数运算符:\n​     加减乘除+ - * /       这里的除是精确除法 c语言那种除法是 //\n​     指数运算**\n​     取余数%\n​    ps:"),n("code",[t._v("type()")]),t._v("\n​        字符串转化成数字：int(str) 条件：str必须是数字组成的。\n数字转化成字符串：str(int)")]),t._v(" "),n("p",[t._v("字符串：str，python当中凡是用引号引起来的都是字符串。\n​    可相加  : str + str  拼接\n可相乘 : str * int  复读")]),t._v(" "),n("p",[t._v("布尔值 :bool\nTrue   False  表示真假  是逻辑运算表达式的结果\n不是基础数据类型 是继承的1和0")])])}],!1,null,null,null);s.default=r.exports}}]);