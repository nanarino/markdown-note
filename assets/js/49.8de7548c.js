(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{187:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"hashlib模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hashlib模块","aria-hidden":"true"}},[s._v("#")]),s._v(" hashlib模块")]),s._v(" "),a("p",[s._v("hashlib模块提供了常见的摘要算法，如MD5，SHA1等等。")]),s._v(" "),a("blockquote",[a("p",[s._v("什么是摘要算法呢？摘要算法又称哈希算法、散列算法。它通过一个函数，把任意长度的数据转换为一个长度固定的数据串（通常用16进制的字符串表示）。")]),s._v(" "),a("p",[s._v("摘要算法就是通过摘要函数f()对任意长度的数据data计算出固定长度的摘要digest，目的是为了发现原始数据是否被人篡改过。")]),s._v(" "),a("p",[s._v("摘要算法之所以能指出数据是否被篡改过，就是因为摘要函数是一个单向函数，计算f(data)很容易，但通过digest反推data却非常困难。而且，对原始数据做一个bit的修改，都会导致计算出的摘要完全不同。")])]),s._v(" "),a("p",[s._v("我们以常见的摘要算法MD5为例，计算出一个字符串的MD5值：")]),s._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" hashlib\n \nmd5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hashlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("md5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nmd5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'how to use md5 in python hashlib?'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),s._v(" md5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hexdigest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#计算结果如下：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" d26a53750bc40b38b65a520292f69306\n")])])]),a("p",[s._v("如果数据量很大，可以分块多次调用update()，最后计算的结果是一样的：")]),s._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("md5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hashlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("md5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nmd5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'how to use md5 in '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nmd5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'python hashlib?'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),s._v(" md5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hexdigest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("MD5是最常见的摘要算法，速度很快，生成结果是固定的128 bit字节，通常用一个32位的16进制字符串表示。另一种常见的摘要算法是SHA1，调用SHA1和调用MD5完全类似：")]),s._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" hashlib\n \nsha1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hashlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sha1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nsha1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'how to use sha1 in '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nsha1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'python hashlib?'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),s._v(" sha1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hexdigest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("SHA1的结果是160 bit字节，通常用一个40位的16进制字符串表示。比SHA1更安全的算法是SHA256和SHA512，不过越安全的算法越慢，而且摘要长度更长。")]),s._v(" "),a("blockquote",[a("p",[s._v("任何允许用户登录的网站都会存储用户登录的用户名和口令。如何存储用户名和口令呢？方法是存到数据库表中：")]),s._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("name    | password\n--------+----------\nmichael | 123456\nbob     | abc999\nalice   | alice2008\n")])])]),a("p",[s._v("如果以明文保存用户口令，如果数据库泄露，所有用户的口令就落入黑客的手里。此外，网站运维人员是可以访问数据库的，也就是能获取到所有用户的口令。正确的保存口令的方式是不存储用户的明文口令，而是存储用户口令的摘要，比如MD5：")]),s._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("username | password\n---------+---------------------------------\nmichael  | e10adc3949ba59abbe56e057f20f883e\nbob      | 878ef96e86145580c38c87f0410ad153\nalice    | 99b1c2188db85afee403b1536010c2c9\n")])])]),a("p",[s._v("考虑这么个情况，很多用户喜欢用123456，888888，password这些简单的口令，于是，黑客可以事先计算出这些常用口令的MD5值，得到一个反推表：")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("'e"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("adc"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3949")]),s._v("ba"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("59")]),s._v("abbe"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("56e057")]),s._v("f"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("f"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("883")]),s._v("e'"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" '"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123456")]),s._v("'\n'"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("21218")]),s._v("cca"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("77804")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("ba"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1922")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("33e0151105")]),s._v("'"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" '"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("888888")]),s._v("'\n'"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("f"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("dcc"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("aa"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("765")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("61")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8327")]),s._v("deb"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("882")]),s._v("cf"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),s._v("'"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 'password'\n")])])]),a("p",[s._v("这样，无需破解，只需要对比数据库的MD5，黑客就获得了使用常用口令的用户账号。")]),s._v(" "),a("p",[s._v("对于用户来讲，当然不要使用过于简单的口令。但是，我们能否在程序设计上对简单口令加强保护呢？")]),s._v(" "),a("p",[s._v("由于常用口令的MD5值很容易被计算出来，所以，要确保存储的用户口令不是那些已经被计算出来的常用口令的MD5，这一方法通过对原始口令加一个复杂字符串来实现，俗称“加盐”：")]),s._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("hashlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("md5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"salt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("encode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"utf8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("经过Salt处理的MD5口令，只要Salt不被黑客知道，即使用户输入简单口令，也很难通过MD5反推明文口令。")]),s._v(" "),a("p",[s._v("但是如果有两个用户都使用了相同的简单口令比如123456，在数据库中，将存储两条相同的MD5值，这说明这两个用户的口令是一样的。有没有办法让使用相同口令的用户存储不同的MD5呢？")]),s._v(" "),a("p",[s._v("如果假定用户无法修改登录名，就可以通过把登录名作为Salt的一部分来计算MD5，从而实现相同口令的用户也存储不同的MD5。")]),s._v(" "),a("p",[s._v("摘要算法在很多地方都有广泛的应用。要注意摘要算法不是加密算法，不能用于加密（因为无法通过摘要反推明文），只能用于防篡改，但是它的单向计算特性决定了可以在不存储明文口令的情况下验证用户口令。")])])])}],!1,null,null,null);t.default=e.exports}}]);